/**
 * @file BOARD_STATE_H.h
 * @brief Defines the default state and dimensions for the Tetris game board.
 *
 * This header file contains the default initialization for the Tetris game board,
 * including the board's width and height, as well as the initial state of each cell
 * within the board. The board is initialized to be empty, with all cells set to
 * PIECE_TYPE_N, indicating no piece occupies those cells.
 */

#include "TETRIS_ENUMS.h"

#ifndef BOARD_STATE_H
#define BOARD_STATE_H

#define BOARD_WIDTH 10
#define BOARD_HEIGHT 23

/**
 * @brief Default state of the Tetris game board.
 * 
 * Initializes the Tetris game board to be empty. Each cell of the board is set to
 * PIECE_TYPE_N, indicating that no Tetris piece occupies the cell. This default state
 * is used at the start of the game and can be used to reset the game board to its
 * initial state.
 */
const PieceType DEFAULT_BOARD_STATE[BOARD_HEIGHT][BOARD_WIDTH] = {
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N},
    {PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N, PIECE_TYPE_N}
};

#endif